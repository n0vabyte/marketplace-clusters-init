---
- name: Create Logstash ILM policy
  uri:
    url: "{{ elasticsearch_endpoint }}/_ilm/policy/{{ elasticsearch_index_name }}-policy"
    user: elastic
    password: "{{ elasticsearch_password }}"
    method: PUT
    body_format: json
    status_code: [200]
    return_content: true
    ca_path: "{{ elasticsearch_ssl_directory }}/ca.crt"
    client_cert: "{{ elasticsearch_ssl_directory }}/{{ data.elasticsearch[0].instance.hostname }}.crt"
    client_key: "{{ elasticsearch_ssl_directory }}/{{ data.elasticsearch[0].instance.hostname }}.key"
    body:
      policy: { 
        phases: {
          hot: {
            actions: {
              rollover: {
                max_size: "50gb",
                max_age: "7d"
                }
              }
            },
          delete: { 
            min_age: "30d", 
            actions: { 
              delete: {} 
              } 
            }          
          }
        }
    headers:
      Content-Type: 'application/json'
  run_once: true
  delegate_to: "{{ groups['elasticsearch'][0] }}"

- name: Create Logstash index template
  uri:
    url: "{{ elasticsearch_endpoint }}/_index_template/{{ elasticsearch_index_name }}-template"
    user: elastic
    password: "{{ elasticsearch_password }}"
    method: PUT
    body_format: json
    status_code: [200]
    return_content: true
    ca_path: "{{ elasticsearch_ssl_directory }}/ca.crt"
    client_cert: "{{ elasticsearch_ssl_directory }}/{{ data.elasticsearch[0].instance.hostname }}.crt"
    client_key: "{{ elasticsearch_ssl_directory }}/{{ data.elasticsearch[0].instance.hostname }}.key"
    body:
      index_patterns: ["{{ elasticsearch_index_name }}-*"]
      priority: 300
      template: {
        mappings: {
          properties: {
            order_date: {
              type: "date",
              format: "dd-MM-yyyy"
              }
            }
          },
        settings: {
          index.lifecycle.name: "{{ elasticsearch_index_name }}-policy",
          index.lifecycle.rollover_alias: "{{ elasticsearch_index_name }}-template",
          number_of_shards: 3,
          number_of_replicas: 1
          },
        aliases: "{{ { (elasticsearch_index_name ~ '-template'): {} } }}"
        }
    headers:
      Content-Type: 'application/json'
  run_once: true
  delegate_to: "{{ groups['elasticsearch'][0] }}"